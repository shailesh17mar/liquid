# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: redis
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: redis
#   template:
#     metadata:
#       labels:
#         app: redis
#     spec:
#       nodeSelector:
#         "beta.kubernetes.io/os": linux
#       containers:
#       - name: redis
#         image: mcr.microsoft.com/oss/bitnami/redis:6.0.8
#         env:
#         - name: ALLOW_EMPTY_PASSWORD
#           value: "yes"
#         ports:
#         - containerPort: 6379
#           name: redis
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: redis
# spec:
#   ports:
#   - port: 6379
#   selector:
#     app: redis
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: liquid
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: liquid
#   strategy:
#     rollingUpdate:
#       maxSurge: 1
#       maxUnavailable: 1
#   minReadySeconds: 5
#   template:
#     metadata:
#       labels:
#         app: liquid
#     spec:
#       nodeSelector:
#         "beta.kubernetes.io/os": linux
#       containers:
#       - name: liquid
#         image: liquid.azurecr.io/liquid:v1
#         ports:
#         - containerPort: 8080
#         resources:
#           requests:
#             cpu: 250m
#           limits:
#             cpu: 1000m
#         env:
#         - name: REDIS
#           value: "redis"
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: liquid
# spec:
#   type: LoadBalancer
#   ports:
#   - port: 80
#   selector:
#     app: liquid
#
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: liquid-server
spec:
  selector:
    matchLabels:
      app: liquid-app
  replicas: 1
  template:
    metadata:
      labels:
        app: liquid-app
    spec:
      containers:
        - name: liquid
          imagePullPolicy: Always
          image: liquid.azurecr.io/liquid:v6
          ports:
            - name: websocket
              containerPort: 8080

---
apiVersion: v1
kind: Service
metadata:
  name: liquid-app-service
spec:
  type: ClusterIP
  selector:
    app: liquid-app
  ports:
    - name: websocket
      protocol: TCP
      port: 8080
      targetPort: 8080

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
 name: liquid-ingress
 annotations:
  kubernetes.io/ingress.class: nginx
  nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
  nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
  nginx.ingress.kubernetes.io/server-snippets: |
   location / {
    proxy_set_header Upgrade $http_upgrade;
    proxy_http_version 1.1;
    proxy_set_header X-Forwarded-Host $http_host;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header Host $host;
    proxy_set_header Connection "upgrade";
    proxy_cache_bypass $http_upgrade;
    }
spec:
 tls:
  - hosts:
      - fluidguild.ml
    secretName: liquidguild
 rules:
  - host: fluidguild.ml
    http:
      paths:
      - backend:
          serviceName: liquid-app-service
          servicePort: 8080
        path: /

  # - http:
  #     paths:
  #     - path: /
  #       pathType: Prefix
  #       backend:
  #         service:
  #           name: liquid-app
      # - backend:
      #   serviceName: liquid-app
      #   servicePort: 8080

